// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
//
// If you need to extend the classes generated to add
// fields or methods to them, please create partial
// declarations in another file.
// </auto-generated>
#pragma warning disable 0109
#pragma warning disable 1591


namespace Quantum.Prototypes {
  using Photon.Deterministic;
  using Quantum;
  using Quantum.Core;
  using Quantum.Collections;
  using Quantum.Inspector;
  using Quantum.Physics2D;
  using Quantum.Physics3D;
  using Byte = System.Byte;
  using SByte = System.SByte;
  using Int16 = System.Int16;
  using UInt16 = System.UInt16;
  using Int32 = System.Int32;
  using UInt32 = System.UInt32;
  using Int64 = System.Int64;
  using UInt64 = System.UInt64;
  using Boolean = System.Boolean;
  using String = System.String;
  using Object = System.Object;
  using FlagsAttribute = System.FlagsAttribute;
  using SerializableAttribute = System.SerializableAttribute;
  using MethodImplAttribute = System.Runtime.CompilerServices.MethodImplAttribute;
  using MethodImplOptions = System.Runtime.CompilerServices.MethodImplOptions;
  using FieldOffsetAttribute = System.Runtime.InteropServices.FieldOffsetAttribute;
  using StructLayoutAttribute = System.Runtime.InteropServices.StructLayoutAttribute;
  using LayoutKind = System.Runtime.InteropServices.LayoutKind;
  #if QUANTUM_UNITY //;
  using TooltipAttribute = UnityEngine.TooltipAttribute;
  using HeaderAttribute = UnityEngine.HeaderAttribute;
  using SpaceAttribute = UnityEngine.SpaceAttribute;
  using RangeAttribute = UnityEngine.RangeAttribute;
  using HideInInspectorAttribute = UnityEngine.HideInInspector;
  using PreserveAttribute = UnityEngine.Scripting.PreserveAttribute;
  using FormerlySerializedAsAttribute = UnityEngine.Serialization.FormerlySerializedAsAttribute;
  using MovedFromAttribute = UnityEngine.Scripting.APIUpdating.MovedFromAttribute;
  using CreateAssetMenu = UnityEngine.CreateAssetMenuAttribute;
  using RuntimeInitializeOnLoadMethodAttribute = UnityEngine.RuntimeInitializeOnLoadMethodAttribute;
  #endif //;
  
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(System.Collections.Generic.KeyValuePair<EAttributeType, AttributeData>))]
  public unsafe class DictionaryEntry_EAttributeType_AttributeData : Quantum.Prototypes.DictionaryEntry {
    public Quantum.QEnum8<EAttributeType> Key;
    public Quantum.Prototypes.AttributeDataPrototype Value;
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AIDirector))]
  public unsafe partial class AIDirectorPrototype : StructPrototype {
    public Byte TickInterval;
    public Int32 TeamIndex;
    public Quantum.Prototypes.AIDirectorMemoryPrototype Memory;
    partial void MaterializeUser(Frame frame, ref Quantum.AIDirector result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.AIDirector result, in PrototypeMaterializationContext context = default) {
        result.TickInterval = this.TickInterval;
        result.TeamIndex = this.TeamIndex;
        this.Memory.Materialize(frame, ref result.Memory, in context);
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AIDirectorMemory))]
  public unsafe partial class AIDirectorMemoryPrototype : StructPrototype {
    public Byte AvailableCoins;
    partial void MaterializeUser(Frame frame, ref Quantum.AIDirectorMemory result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.AIDirectorMemory result, in PrototypeMaterializationContext context = default) {
        result.AvailableCoins = this.AvailableCoins;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AIMemory))]
  public unsafe class AIMemoryPrototype : ComponentPrototype<Quantum.AIMemory> {
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.AIMemoryEntryPrototype[] MemoryEntries = {};
    public Quantum.QEnum8<EHealthStatus> HealthStatus;
    public MapEntityId ClosestCoin;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.AIMemory component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.AIMemory result, in PrototypeMaterializationContext context = default) {
        if (this.MemoryEntries.Length == 0) {
          result.MemoryEntries = default;
        } else {
          var list = frame.AllocateList(out result.MemoryEntries, this.MemoryEntries.Length);
          for (int i = 0; i < this.MemoryEntries.Length; ++i) {
            Quantum.AIMemoryEntry tmp = default;
            this.MemoryEntries[i].Materialize(frame, ref tmp, in context);
            list.Add(tmp);
          }
        }
        result.HealthStatus = this.HealthStatus;
        PrototypeValidator.FindMapEntity(this.ClosestCoin, in context, out result.ClosestCoin);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AIMemoryEntry))]
  public unsafe class AIMemoryEntryPrototype : StructPrototype {
    public Quantum.QEnum8<EMemoryType> Type;
    public Quantum.Prototypes.MemoryDataPrototype Data;
    public QBoolean IsInfinite;
    public Int32 AvailableTick;
    public Int32 UnavailableTick;
    public void Materialize(Frame frame, ref Quantum.AIMemoryEntry result, in PrototypeMaterializationContext context = default) {
        result.Type = this.Type;
        this.Data.Materialize(frame, ref result.Data, in context);
        result.IsInfinite = this.IsInfinite;
        result.AvailableTick = this.AvailableTick;
        result.UnavailableTick = this.UnavailableTick;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AISteering))]
  public unsafe class AISteeringPrototype : ComponentPrototype<Quantum.AISteering> {
    public QBoolean Debug;
    [HideInInspector()]
    public Quantum.Prototypes.SteeringDataPrototype MainSteeringData;
    [HideInInspector()]
    public FPVector2 CurrentDirection;
    public FP MaxEvasionDuration;
    [HideInInspector()]
    public FP EvasionTimer;
    [HideInInspector()]
    public Int32 EvasionDirection;
    [HideInInspector()]
    public FPVector2 EvasionDirectionVector;
    public FP MainSteeringWeight;
    public FP AvoidanceWeight;
    public FP LerpFactor;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.AISteering component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.AISteering result, in PrototypeMaterializationContext context = default) {
        result.Debug = this.Debug;
        this.MainSteeringData.Materialize(frame, ref result.MainSteeringData, in context);
        result.CurrentDirection = this.CurrentDirection;
        result.MaxEvasionDuration = this.MaxEvasionDuration;
        result.EvasionTimer = this.EvasionTimer;
        result.EvasionDirection = this.EvasionDirection;
        result.EvasionDirectionVector = this.EvasionDirectionVector;
        result.MainSteeringWeight = this.MainSteeringWeight;
        result.AvoidanceWeight = this.AvoidanceWeight;
        result.LerpFactor = this.LerpFactor;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.ArcherSpecialAttackRD))]
  public unsafe partial class ArcherSpecialAttackRDPrototype : StructPrototype {
    public FPVector2 TargetPosition;
    public FP EffectInterval;
    partial void MaterializeUser(Frame frame, ref Quantum.ArcherSpecialAttackRD result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.ArcherSpecialAttackRD result, in PrototypeMaterializationContext context = default) {
        result.TargetPosition = this.TargetPosition;
        result.EffectInterval = this.EffectInterval;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Attack))]
  public unsafe class AttackPrototype : ComponentPrototype<Quantum.Attack> {
    public AssetRef<AttackData> AttackData;
    public Quantum.Prototypes.AttackRuntimeDataPrototype AttackRuntimeData;
    public MapEntityId Source;
    public FP TTL;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Attack component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Attack result, in PrototypeMaterializationContext context = default) {
        result.AttackData = this.AttackData;
        this.AttackRuntimeData.Materialize(frame, ref result.AttackRuntimeData, in context);
        PrototypeValidator.FindMapEntity(this.Source, in context, out result.Source);
        result.TTL = this.TTL;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AttackRuntimeData))]
  public unsafe class AttackRuntimeDataPrototype : UnionPrototype {
    public string _field_used_;
    public Quantum.Prototypes.ArcherSpecialAttackRDPrototype ArcherSpecialAttackRD;
    public Quantum.Prototypes.SpellcasterBasicAttackRDPrototype SpellcasterBasicAttackRD;
    public Quantum.Prototypes.SpellcasterSpecialAttackRDPrototype SpellcasterSpecialAttackRD;
    public Quantum.Prototypes.KnightBasicAttackRDPrototype KnightBasicAttackRD;
    public Quantum.Prototypes.KnightSpecialAttackRDPrototype KnightSpecialAttackRD;
    public void Materialize(Frame frame, ref Quantum.AttackRuntimeData result, in PrototypeMaterializationContext context = default) {
        switch (_field_used_) {
          case "ARCHERSPECIALATTACKRD": this.ArcherSpecialAttackRD.Materialize(frame, ref *result.ArcherSpecialAttackRD, in context); break;
          case "SPELLCASTERBASICATTACKRD": this.SpellcasterBasicAttackRD.Materialize(frame, ref *result.SpellcasterBasicAttackRD, in context); break;
          case "SPELLCASTERSPECIALATTACKRD": this.SpellcasterSpecialAttackRD.Materialize(frame, ref *result.SpellcasterSpecialAttackRD, in context); break;
          case "KNIGHTBASICATTACKRD": this.KnightBasicAttackRD.Materialize(frame, ref *result.KnightBasicAttackRD, in context); break;
          case "KNIGHTSPECIALATTACKRD": this.KnightSpecialAttackRD.Materialize(frame, ref *result.KnightSpecialAttackRD, in context); break;
          case "": case null: break;
          default: PrototypeValidator.UnknownUnionField(_field_used_, in context); break;
        }
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AttributeData))]
  public unsafe partial class AttributeDataPrototype : StructPrototype {
    public FP InitialValue;
    public FP MaxValue;
    [HideInInspector()]
    public FP CurrentValue;
    [DynamicCollectionAttribute()]
    public Quantum.Prototypes.AttributeModifierPrototype[] Modifiers = {};
    partial void MaterializeUser(Frame frame, ref Quantum.AttributeData result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.AttributeData result, in PrototypeMaterializationContext context = default) {
        result.InitialValue = this.InitialValue;
        result.MaxValue = this.MaxValue;
        result.CurrentValue = this.CurrentValue;
        if (this.Modifiers.Length == 0) {
          result.Modifiers = default;
        } else {
          var list = frame.AllocateList(out result.Modifiers, this.Modifiers.Length);
          for (int i = 0; i < this.Modifiers.Length; ++i) {
            Quantum.AttributeModifier tmp = default;
            this.Modifiers[i].Materialize(frame, ref tmp, in context);
            list.Add(tmp);
          }
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.AttributeModifier))]
  public unsafe partial class AttributeModifierPrototype : StructPrototype {
    public Quantum.QEnum8<EModifierAppliance> ModifierAppliance;
    public Quantum.QEnum8<EModifierOperation> ModifierOperation;
    public FP Amount;
    public FP Duration;
    [HideInInspector()]
    public FP Timer;
    partial void MaterializeUser(Frame frame, ref Quantum.AttributeModifier result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.AttributeModifier result, in PrototypeMaterializationContext context = default) {
        result.ModifierAppliance = this.ModifierAppliance;
        result.ModifierOperation = this.ModifierOperation;
        result.Amount = this.Amount;
        result.Duration = this.Duration;
        result.Timer = this.Timer;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Attributes))]
  public unsafe partial class AttributesPrototype : ComponentPrototype<Quantum.Attributes> {
    [DictionaryAttribute()]
    [DynamicCollectionAttribute()]
    public DictionaryEntry_EAttributeType_AttributeData[] DataDictionary = {};
    partial void MaterializeUser(Frame frame, ref Quantum.Attributes result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Attributes component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Attributes result, in PrototypeMaterializationContext context = default) {
        if (this.DataDictionary.Length == 0) {
          result.DataDictionary = default;
        } else {
          var dict = frame.AllocateDictionary(out result.DataDictionary, this.DataDictionary.Length);
          for (int i = 0; i < this.DataDictionary.Length; ++i) {
            Quantum.EAttributeType tmpKey = default;
            Quantum.AttributeData tmpValue = default;
            tmpKey = this.DataDictionary[i].Key;
            this.DataDictionary[i].Value.Materialize(frame, ref tmpValue, in context);
            PrototypeValidator.AddToDictionary(dict, tmpKey, tmpValue, in context);
          }
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Bot))]
  public unsafe partial class BotPrototype : ComponentPrototype<Quantum.Bot> {
    public QBoolean IsActive;
    [HideInInspector()]
    public Quantum.Prototypes.QuantumDemoInputTopDownPrototype Input;
    public AssetRef<HFSMRoot> HFSMRoot;
    public AssetRef<AIBlackboardInitializer> BlackboardInitializer;
    public AssetRef<AIConfigBase> AIConfig;
    public AssetRef<NavMeshAgentConfig> NavMeshAgentConfig;
    public Quantum.QEnum8<ETactics> CurrentTactic;
    public FP TacticalCommitment;
    partial void MaterializeUser(Frame frame, ref Quantum.Bot result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Bot component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Bot result, in PrototypeMaterializationContext context = default) {
        result.IsActive = this.IsActive;
        this.Input.Materialize(frame, ref result.Input, in context);
        result.HFSMRoot = this.HFSMRoot;
        result.BlackboardInitializer = this.BlackboardInitializer;
        result.AIConfig = this.AIConfig;
        result.NavMeshAgentConfig = this.NavMeshAgentConfig;
        result.CurrentTactic = this.CurrentTactic;
        result.TacticalCommitment = this.TacticalCommitment;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Character))]
  public unsafe partial class CharacterPrototype : ComponentPrototype<Quantum.Character> {
    public AssetRef<CharacterInfo> Info;
    partial void MaterializeUser(Frame frame, ref Quantum.Character result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Character component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Character result, in PrototypeMaterializationContext context = default) {
        result.Info = this.Info;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.CharacterAttacks))]
  public unsafe partial class CharacterAttacksPrototype : ComponentPrototype<Quantum.CharacterAttacks> {
    public AssetRef<SkillData> BasicSkillData;
    public AssetRef<SkillData> SpecialSkillData;
    partial void MaterializeUser(Frame frame, ref Quantum.CharacterAttacks result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.CharacterAttacks component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.CharacterAttacks result, in PrototypeMaterializationContext context = default) {
        result.BasicSkillData = this.BasicSkillData;
        result.SpecialSkillData = this.SpecialSkillData;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Collectible))]
  public unsafe partial class CollectiblePrototype : ComponentPrototype<Quantum.Collectible> {
    public AssetRef<CollectibleData> CollectibleData;
    partial void MaterializeUser(Frame frame, ref Quantum.Collectible result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Collectible component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Collectible result, in PrototypeMaterializationContext context = default) {
        result.CollectibleData = this.CollectibleData;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.EscapeRoute))]
  public unsafe partial class EscapeRoutePrototype : ComponentPrototype<Quantum.EscapeRoute> {
    public Int32 TeamId;
    partial void MaterializeUser(Frame frame, ref Quantum.EscapeRoute result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.EscapeRoute component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.EscapeRoute result, in PrototypeMaterializationContext context = default) {
        result.TeamId = this.TeamId;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Health))]
  public unsafe partial class HealthPrototype : ComponentPrototype<Quantum.Health> {
    public QBoolean IsDead;
    public QBoolean CanSelfHeal;
    [HideInInspector()]
    public FP StartHealingTime;
    [HideInInspector()]
    public FP NextHealTime;
    partial void MaterializeUser(Frame frame, ref Quantum.Health result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Health component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Health result, in PrototypeMaterializationContext context = default) {
        result.IsDead = this.IsDead;
        result.CanSelfHeal = this.CanSelfHeal;
        result.StartHealingTime = this.StartHealingTime;
        result.NextHealTime = this.NextHealTime;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Immunity))]
  public unsafe partial class ImmunityPrototype : ComponentPrototype<Quantum.Immunity> {
    [HideInInspector()]
    public FP Timer;
    partial void MaterializeUser(Frame frame, ref Quantum.Immunity result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Immunity component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Immunity result, in PrototypeMaterializationContext context = default) {
        result.Timer = this.Timer;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Input))]
  public unsafe partial class InputPrototype : StructPrototype {
    public Button _left;
    public Button _right;
    public Button _up;
    public Button _down;
    public Button _a;
    public Button _b;
    public Button _c;
    public Button _d;
    public Button _l1;
    public Button _r1;
    public Button _select;
    public Button _start;
    public Byte _analogRightTrigger;
    public Byte _analogLeftTrigger;
    public Quantum.Prototypes.QuantumThumbSticksPrototype ThumbSticks;
    partial void MaterializeUser(Frame frame, ref Quantum.Input result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.Input result, in PrototypeMaterializationContext context = default) {
        result._left = this._left;
        result._right = this._right;
        result._up = this._up;
        result._down = this._down;
        result._a = this._a;
        result._b = this._b;
        result._c = this._c;
        result._d = this._d;
        result._l1 = this._l1;
        result._r1 = this._r1;
        result._select = this._select;
        result._start = this._start;
        result._analogRightTrigger = this._analogRightTrigger;
        result._analogLeftTrigger = this._analogLeftTrigger;
        this.ThumbSticks.Materialize(frame, ref result.ThumbSticks, in context);
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.InputContainer))]
  public unsafe partial class InputContainerPrototype : ComponentPrototype<Quantum.InputContainer> {
    [HideInInspector()]
    public Quantum.Prototypes.QuantumDemoInputTopDownPrototype Input;
    partial void MaterializeUser(Frame frame, ref Quantum.InputContainer result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.InputContainer component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.InputContainer result, in PrototypeMaterializationContext context = default) {
        this.Input.Materialize(frame, ref result.Input, in context);
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Inventory))]
  public unsafe partial class InventoryPrototype : ComponentPrototype<Quantum.Inventory> {
    public Int32 CollectiblesAmount;
    public AssetRef<CollectibleData> CollectibleData;
    public AssetRef<CollectibleData> AttractionCollectibleData;
    partial void MaterializeUser(Frame frame, ref Quantum.Inventory result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Inventory component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Inventory result, in PrototypeMaterializationContext context = default) {
        result.CollectiblesAmount = this.CollectiblesAmount;
        result.CollectibleData = this.CollectibleData;
        result.AttractionCollectibleData = this.AttractionCollectibleData;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Invisibility))]
  public unsafe partial class InvisibilityPrototype : ComponentPrototype<Quantum.Invisibility> {
    [HideInInspector()]
    public Int32 InvisibilitySpotsCount;
    [HideInInspector()]
    public QBoolean IsInvisible;
    [HideInInspector()]
    public FP ExposureTimer;
    [HideInInspector()]
    public Int32 StaticColliderId;
    partial void MaterializeUser(Frame frame, ref Quantum.Invisibility result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Invisibility component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Invisibility result, in PrototypeMaterializationContext context = default) {
        result.InvisibilitySpotsCount = this.InvisibilitySpotsCount;
        result.IsInvisible = this.IsInvisible;
        result.ExposureTimer = this.ExposureTimer;
        result.StaticColliderId = this.StaticColliderId;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.InvisibilitySpot))]
  public unsafe partial class InvisibilitySpotPrototype : ComponentPrototype<Quantum.InvisibilitySpot> {
    public Byte GroupId;
    public Int32 StaticColliderId;
    public Int32 NorthNeighborId;
    public Int32 SouthNeighborId;
    public Int32 EastNeighborId;
    public Int32 WestNeighborId;
    partial void MaterializeUser(Frame frame, ref Quantum.InvisibilitySpot result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.InvisibilitySpot component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.InvisibilitySpot result, in PrototypeMaterializationContext context = default) {
        result.GroupId = this.GroupId;
        result.StaticColliderId = this.StaticColliderId;
        result.NorthNeighborId = this.NorthNeighborId;
        result.SouthNeighborId = this.SouthNeighborId;
        result.EastNeighborId = this.EastNeighborId;
        result.WestNeighborId = this.WestNeighborId;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.KCC))]
  public unsafe partial class KCCPrototype : ComponentPrototype<Quantum.KCC> {
    public AssetRef<KCCSettings> Settings;
    public FP MaxSpeed;
    public FP Acceleration;
    public FPVector2 Velocity;
    partial void MaterializeUser(Frame frame, ref Quantum.KCC result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.KCC component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.KCC result, in PrototypeMaterializationContext context = default) {
        result.Settings = this.Settings;
        result.MaxSpeed = this.MaxSpeed;
        result.Acceleration = this.Acceleration;
        result.Velocity = this.Velocity;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.KnightBasicAttackRD))]
  public unsafe class KnightBasicAttackRDPrototype : StructPrototype {
    public MapEntityId SkillEntity;
    public void Materialize(Frame frame, ref Quantum.KnightBasicAttackRD result, in PrototypeMaterializationContext context = default) {
        PrototypeValidator.FindMapEntity(this.SkillEntity, in context, out result.SkillEntity);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.KnightBasicSkillRD))]
  public unsafe class KnightBasicSkillRDPrototype : StructPrototype {
    [DynamicCollectionAttribute()]
    public MapEntityId[] Attacks = {};
    [DynamicCollectionAttribute()]
    public MapEntityId[] AlreadyAffected = {};
    public void Materialize(Frame frame, ref Quantum.KnightBasicSkillRD result, in PrototypeMaterializationContext context = default) {
        if (this.Attacks.Length == 0) {
          result.Attacks = default;
        } else {
          var list = frame.AllocateList(out result.Attacks, this.Attacks.Length);
          for (int i = 0; i < this.Attacks.Length; ++i) {
            EntityRef tmp = default;
            PrototypeValidator.FindMapEntity(this.Attacks[i], in context, out tmp);
            list.Add(tmp);
          }
        }
        if (this.AlreadyAffected.Length == 0) {
          result.AlreadyAffected = default;
        } else {
          var list = frame.AllocateList(out result.AlreadyAffected, this.AlreadyAffected.Length);
          for (int i = 0; i < this.AlreadyAffected.Length; ++i) {
            EntityRef tmp = default;
            PrototypeValidator.FindMapEntity(this.AlreadyAffected[i], in context, out tmp);
            list.Add(tmp);
          }
        }
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.KnightSpecialAttackRD))]
  public unsafe class KnightSpecialAttackRDPrototype : StructPrototype {
    [DynamicCollectionAttribute()]
    public MapEntityId[] Targets = {};
    public void Materialize(Frame frame, ref Quantum.KnightSpecialAttackRD result, in PrototypeMaterializationContext context = default) {
        if (this.Targets.Length == 0) {
          result.Targets = default;
        } else {
          var list = frame.AllocateList(out result.Targets, this.Targets.Length);
          for (int i = 0; i < this.Targets.Length; ++i) {
            EntityRef tmp = default;
            PrototypeValidator.FindMapEntity(this.Targets[i], in context, out tmp);
            list.Add(tmp);
          }
        }
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.MemoryData))]
  public unsafe class MemoryDataPrototype : UnionPrototype {
    public string _field_used_;
    public Quantum.Prototypes.MemoryDataEnemyInvisiblePrototype EnemyInvisible;
    public Quantum.Prototypes.MemoryDataAreaAvoidancePrototype AreaAvoidance;
    public Quantum.Prototypes.MemoryDataLineAvoidancePrototype LineAvoidance;
    public void Materialize(Frame frame, ref Quantum.MemoryData result, in PrototypeMaterializationContext context = default) {
        switch (_field_used_) {
          case "ENEMYINVISIBLE": this.EnemyInvisible.Materialize(frame, ref *result.EnemyInvisible, in context); break;
          case "AREAAVOIDANCE": this.AreaAvoidance.Materialize(frame, ref *result.AreaAvoidance, in context); break;
          case "LINEAVOIDANCE": this.LineAvoidance.Materialize(frame, ref *result.LineAvoidance, in context); break;
          case "": case null: break;
          default: PrototypeValidator.UnknownUnionField(_field_used_, in context); break;
        }
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.MemoryDataAreaAvoidance))]
  public unsafe class MemoryDataAreaAvoidancePrototype : StructPrototype {
    public FP Weight;
    public MapEntityId Entity;
    public FP RunDistance;
    public void Materialize(Frame frame, ref Quantum.MemoryDataAreaAvoidance result, in PrototypeMaterializationContext context = default) {
        result.Weight = this.Weight;
        PrototypeValidator.FindMapEntity(this.Entity, in context, out result.Entity);
        result.RunDistance = this.RunDistance;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.MemoryDataEnemyInvisible))]
  public unsafe class MemoryDataEnemyInvisiblePrototype : StructPrototype {
    public MapEntityId Enemy;
    public FPVector2 DisappearPosition;
    public FPVector2 NearbyHideSpot;
    public void Materialize(Frame frame, ref Quantum.MemoryDataEnemyInvisible result, in PrototypeMaterializationContext context = default) {
        PrototypeValidator.FindMapEntity(this.Enemy, in context, out result.Enemy);
        result.DisappearPosition = this.DisappearPosition;
        result.NearbyHideSpot = this.NearbyHideSpot;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.MemoryDataLineAvoidance))]
  public unsafe class MemoryDataLineAvoidancePrototype : StructPrototype {
    public FP Weight;
    public MapEntityId Entity;
    public void Materialize(Frame frame, ref Quantum.MemoryDataLineAvoidance result, in PrototypeMaterializationContext context = default) {
        result.Weight = this.Weight;
        PrototypeValidator.FindMapEntity(this.Entity, in context, out result.Entity);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.MovementData))]
  public unsafe partial class MovementDataPrototype : ComponentPrototype<Quantum.MovementData> {
    [HideInInspector()]
    public FP DirectionTimer;
    [HideInInspector()]
    public FP MovementTimer;
    [HideInInspector()]
    public FPVector2 LastAutoAimDirection;
    partial void MaterializeUser(Frame frame, ref Quantum.MovementData result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.MovementData component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.MovementData result, in PrototypeMaterializationContext context = default) {
        result.DirectionTimer = this.DirectionTimer;
        result.MovementTimer = this.MovementTimer;
        result.LastAutoAimDirection = this.LastAutoAimDirection;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.ObjectivePoint))]
  public unsafe partial class ObjectivePointPrototype : ComponentPrototype<Quantum.ObjectivePoint> {
    [HideInInspector()]
    public Int32 _empty_prototype_dummy_field_;
    partial void MaterializeUser(Frame frame, ref Quantum.ObjectivePoint result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.ObjectivePoint component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.ObjectivePoint result, in PrototypeMaterializationContext context = default) {
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.PlayerLink))]
  public unsafe partial class PlayerLinkPrototype : ComponentPrototype<Quantum.PlayerLink> {
    public PlayerRef PlayerRef;
    partial void MaterializeUser(Frame frame, ref Quantum.PlayerLink result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.PlayerLink component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.PlayerLink result, in PrototypeMaterializationContext context = default) {
        result.PlayerRef = this.PlayerRef;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [ExcludeFromPrototype()]
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.QuantumDemoInputPlatformer2D))]
  public unsafe partial class QuantumDemoInputPlatformer2DPrototype : StructPrototype {
    public FPVector2 AimDirection;
    public Button Left;
    public Button Right;
    public Button Up;
    public Button Down;
    public Button Jump;
    public Button Dash;
    public Button Fire;
    public Button AltFire;
    public Button Use;
    partial void MaterializeUser(Frame frame, ref Quantum.QuantumDemoInputPlatformer2D result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.QuantumDemoInputPlatformer2D result, in PrototypeMaterializationContext context = default) {
        result.AimDirection = this.AimDirection;
        result.Left = this.Left;
        result.Right = this.Right;
        result.Up = this.Up;
        result.Down = this.Down;
        result.Jump = this.Jump;
        result.Dash = this.Dash;
        result.Fire = this.Fire;
        result.AltFire = this.AltFire;
        result.Use = this.Use;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [ExcludeFromPrototype()]
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.QuantumDemoInputShooter3D))]
  public unsafe partial class QuantumDemoInputShooter3DPrototype : StructPrototype {
    public FPVector2 MoveDirection;
    public FP Pitch;
    public FP Yaw;
    public Button Jump;
    public Button Dash;
    public Button Fire;
    public Button AltFire;
    public Button Use;
    partial void MaterializeUser(Frame frame, ref Quantum.QuantumDemoInputShooter3D result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.QuantumDemoInputShooter3D result, in PrototypeMaterializationContext context = default) {
        result.MoveDirection = this.MoveDirection;
        result.Pitch = this.Pitch;
        result.Yaw = this.Yaw;
        result.Jump = this.Jump;
        result.Dash = this.Dash;
        result.Fire = this.Fire;
        result.AltFire = this.AltFire;
        result.Use = this.Use;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [ExcludeFromPrototype()]
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.QuantumDemoInputTopDown))]
  public unsafe partial class QuantumDemoInputTopDownPrototype : StructPrototype {
    public FPVector2 MoveDirection;
    public FPVector2 AimDirection;
    public Button Left;
    public Button Right;
    public Button Up;
    public Button Down;
    public Button Jump;
    public Button Dash;
    public Button Fire;
    public Button AltFire;
    public Button Use;
    partial void MaterializeUser(Frame frame, ref Quantum.QuantumDemoInputTopDown result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.QuantumDemoInputTopDown result, in PrototypeMaterializationContext context = default) {
        result.MoveDirection = this.MoveDirection;
        result.AimDirection = this.AimDirection;
        result.Left = this.Left;
        result.Right = this.Right;
        result.Up = this.Up;
        result.Down = this.Down;
        result.Jump = this.Jump;
        result.Dash = this.Dash;
        result.Fire = this.Fire;
        result.AltFire = this.AltFire;
        result.Use = this.Use;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [ExcludeFromPrototype()]
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.QuantumHighresThumbSticks))]
  public unsafe partial class QuantumHighresThumbSticksPrototype : StructPrototype {
    public Byte _leftThumbAngle;
    public Byte _leftThumbMagnitude;
    public Int16 _rightThumbX;
    public Int16 _rightThumbY;
    partial void MaterializeUser(Frame frame, ref Quantum.QuantumHighresThumbSticks result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.QuantumHighresThumbSticks result, in PrototypeMaterializationContext context = default) {
        result._leftThumbAngle = this._leftThumbAngle;
        result._leftThumbMagnitude = this._leftThumbMagnitude;
        result._rightThumbX = this._rightThumbX;
        result._rightThumbY = this._rightThumbY;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [ExcludeFromPrototype()]
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.QuantumRegularThumbSticks))]
  public unsafe partial class QuantumRegularThumbSticksPrototype : StructPrototype {
    public Byte _leftThumbAngle;
    public Byte _leftThumbMagnitude;
    public Byte _rightThumbAngle;
    public Byte _rightThumbMagnitude;
    partial void MaterializeUser(Frame frame, ref Quantum.QuantumRegularThumbSticks result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.QuantumRegularThumbSticks result, in PrototypeMaterializationContext context = default) {
        result._leftThumbAngle = this._leftThumbAngle;
        result._leftThumbMagnitude = this._leftThumbMagnitude;
        result._rightThumbAngle = this._rightThumbAngle;
        result._rightThumbMagnitude = this._rightThumbMagnitude;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [ExcludeFromPrototype()]
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.QuantumThumbSticks))]
  public unsafe partial class QuantumThumbSticksPrototype : UnionPrototype {
    public string _field_used_;
    public Quantum.Prototypes.QuantumRegularThumbSticksPrototype Regular;
    public Quantum.Prototypes.QuantumHighresThumbSticksPrototype HighRes;
    partial void MaterializeUser(Frame frame, ref Quantum.QuantumThumbSticks result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.QuantumThumbSticks result, in PrototypeMaterializationContext context = default) {
        switch (_field_used_) {
          case "REGULAR": this.Regular.Materialize(frame, ref *result.Regular, in context); break;
          case "HIGHRES": this.HighRes.Materialize(frame, ref *result.HighRes, in context); break;
          case "": case null: break;
          default: PrototypeValidator.UnknownUnionField(_field_used_, in context); break;
        }
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Respawn))]
  public unsafe partial class RespawnPrototype : ComponentPrototype<Quantum.Respawn> {
    [HideInInspector()]
    public FP SpawnTimer;
    partial void MaterializeUser(Frame frame, ref Quantum.Respawn result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Respawn component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Respawn result, in PrototypeMaterializationContext context = default) {
        result.SpawnTimer = this.SpawnTimer;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.Skill))]
  public unsafe class SkillPrototype : ComponentPrototype<Quantum.Skill> {
    public AssetRef<SkillData> SkillData;
    public Quantum.Prototypes.SkillRuntimeDataPrototype SkillRuntimeData;
    public MapEntityId Source;
    public FPVector2 ActionVector;
    public FP TTL;
    public FP ActionTimer;
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.Skill component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.Skill result, in PrototypeMaterializationContext context = default) {
        result.SkillData = this.SkillData;
        this.SkillRuntimeData.Materialize(frame, ref result.SkillRuntimeData, in context);
        PrototypeValidator.FindMapEntity(this.Source, in context, out result.Source);
        result.ActionVector = this.ActionVector;
        result.TTL = this.TTL;
        result.ActionTimer = this.ActionTimer;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SkillRuntimeData))]
  public unsafe class SkillRuntimeDataPrototype : UnionPrototype {
    public string _field_used_;
    public Quantum.Prototypes.KnightBasicSkillRDPrototype KnightBasicSkillRD;
    public Quantum.Prototypes.SpellcasterSpecialSkillRDPrototype SpellcasterSpecialSkillRD;
    public void Materialize(Frame frame, ref Quantum.SkillRuntimeData result, in PrototypeMaterializationContext context = default) {
        switch (_field_used_) {
          case "KNIGHTBASICSKILLRD": this.KnightBasicSkillRD.Materialize(frame, ref *result.KnightBasicSkillRD, in context); break;
          case "SPELLCASTERSPECIALSKILLRD": this.SpellcasterSpecialSkillRD.Materialize(frame, ref *result.SpellcasterSpecialSkillRD, in context); break;
          case "": case null: break;
          default: PrototypeValidator.UnknownUnionField(_field_used_, in context); break;
        }
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SpawnPoint))]
  public unsafe partial class SpawnPointPrototype : ComponentPrototype<Quantum.SpawnPoint> {
    public Int32 Team;
    partial void MaterializeUser(Frame frame, ref Quantum.SpawnPoint result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.SpawnPoint component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.SpawnPoint result, in PrototypeMaterializationContext context = default) {
        result.Team = this.Team;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SpellcasterBasicAttackRD))]
  public unsafe partial class SpellcasterBasicAttackRDPrototype : StructPrototype {
    public FPVector2 TargetPosition;
    public FP EffectInterval;
    partial void MaterializeUser(Frame frame, ref Quantum.SpellcasterBasicAttackRD result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.SpellcasterBasicAttackRD result, in PrototypeMaterializationContext context = default) {
        result.TargetPosition = this.TargetPosition;
        result.EffectInterval = this.EffectInterval;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SpellcasterSpecialAttackRD))]
  public unsafe partial class SpellcasterSpecialAttackRDPrototype : StructPrototype {
    public FPVector2 TargetPosition;
    public FP EffectInterval;
    partial void MaterializeUser(Frame frame, ref Quantum.SpellcasterSpecialAttackRD result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.SpellcasterSpecialAttackRD result, in PrototypeMaterializationContext context = default) {
        result.TargetPosition = this.TargetPosition;
        result.EffectInterval = this.EffectInterval;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SpellcasterSpecialSkillRD))]
  public unsafe partial class SpellcasterSpecialSkillRDPrototype : StructPrototype {
    public FPVector2 TargetPosition;
    partial void MaterializeUser(Frame frame, ref Quantum.SpellcasterSpecialSkillRD result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.SpellcasterSpecialSkillRD result, in PrototypeMaterializationContext context = default) {
        result.TargetPosition = this.TargetPosition;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SteeringData))]
  public unsafe class SteeringDataPrototype : UnionPrototype {
    public string _field_used_;
    public Quantum.Prototypes.SteeringEntryNavMeshPrototype SteeringEntryNavMesh;
    public Quantum.Prototypes.SteeringEntryContextPrototype SteeringEntryContext;
    public void Materialize(Frame frame, ref Quantum.SteeringData result, in PrototypeMaterializationContext context = default) {
        switch (_field_used_) {
          case "STEERINGENTRYNAVMESH": this.SteeringEntryNavMesh.Materialize(frame, ref *result.SteeringEntryNavMesh, in context); break;
          case "STEERINGENTRYCONTEXT": this.SteeringEntryContext.Materialize(frame, ref *result.SteeringEntryContext, in context); break;
          case "": case null: break;
          default: PrototypeValidator.UnknownUnionField(_field_used_, in context); break;
        }
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SteeringEntryContext))]
  public unsafe class SteeringEntryContextPrototype : StructPrototype {
    public MapEntityId CharacterRef;
    public FP RunDistance;
    public FP ThreatDistance;
    public void Materialize(Frame frame, ref Quantum.SteeringEntryContext result, in PrototypeMaterializationContext context = default) {
        PrototypeValidator.FindMapEntity(this.CharacterRef, in context, out result.CharacterRef);
        result.RunDistance = this.RunDistance;
        result.ThreatDistance = this.ThreatDistance;
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.SteeringEntryNavMesh))]
  public unsafe partial class SteeringEntryNavMeshPrototype : StructPrototype {
    public FPVector2 NavMeshDirection;
    partial void MaterializeUser(Frame frame, ref Quantum.SteeringEntryNavMesh result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.SteeringEntryNavMesh result, in PrototypeMaterializationContext context = default) {
        result.NavMeshDirection = this.NavMeshDirection;
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.TeamData))]
  public unsafe partial class TeamDataPrototype : StructPrototype {
    public Byte Index;
    public QBoolean StrategyFightActivated;
    public QBoolean StrategyScoreActivated;
    public QBoolean StrategyRunActivated;
    public Int32 Score;
    public FP HealthsMax;
    public FP HealthsCurrent;
    public FP HealthsAverage;
    public FP HealthsPercentage;
    public QBoolean HasLowScoreAgent;
    public Quantum.QEnum8<ETeamStatus> TeamStatus;
    public Quantum.Prototypes.AIDirectorPrototype AIDirector;
    partial void MaterializeUser(Frame frame, ref Quantum.TeamData result, in PrototypeMaterializationContext context);
    public void Materialize(Frame frame, ref Quantum.TeamData result, in PrototypeMaterializationContext context = default) {
        result.Index = this.Index;
        result.StrategyFightActivated = this.StrategyFightActivated;
        result.StrategyScoreActivated = this.StrategyScoreActivated;
        result.StrategyRunActivated = this.StrategyRunActivated;
        result.Score = this.Score;
        result.HealthsMax = this.HealthsMax;
        result.HealthsCurrent = this.HealthsCurrent;
        result.HealthsAverage = this.HealthsAverage;
        result.HealthsPercentage = this.HealthsPercentage;
        result.HasLowScoreAgent = this.HasLowScoreAgent;
        result.TeamStatus = this.TeamStatus;
        this.AIDirector.Materialize(frame, ref result.AIDirector, in context);
        MaterializeUser(frame, ref result, in context);
    }
  }
  [System.SerializableAttribute()]
  [Quantum.Prototypes.Prototype(typeof(Quantum.TeamInfo))]
  public unsafe partial class TeamInfoPrototype : ComponentPrototype<Quantum.TeamInfo> {
    public Int32 Index;
    partial void MaterializeUser(Frame frame, ref Quantum.TeamInfo result, in PrototypeMaterializationContext context);
    public override Boolean AddToEntity(FrameBase f, EntityRef entity, in PrototypeMaterializationContext context) {
        Quantum.TeamInfo component = default;
        Materialize((Frame)f, ref component, in context);
        return f.Set(entity, component) == SetResult.ComponentAdded;
    }
    public void Materialize(Frame frame, ref Quantum.TeamInfo result, in PrototypeMaterializationContext context = default) {
        result.Index = this.Index;
        MaterializeUser(frame, ref result, in context);
    }
  }
}
#pragma warning restore 0109
#pragma warning restore 1591
